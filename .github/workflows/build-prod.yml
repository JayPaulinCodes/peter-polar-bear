name: CI Build Production

on:
  workflow_run:
    workflows: 
      - Version Bump Prod
    branches: 
      - main
      - master
    types: 
      - completed

jobs:
  compile-project:
    name: Compile Project
    runs-on:
      - self-hosted
      - Linux

    env:
      OUTPUT_NAME: "${{ github.sha }}-compiled"

    outputs:
      artifact-name: ${{ env.OUTPUT_NAME }}
      artifact-id: ${{ steps.artifact-upload.outputs.artifact-id }}
      artifact-url: ${{ steps.artifact-upload.outputs.artifact-url }}
      project-version: ${{ steps.proj-version.outputs.bumped-version }}

    steps:
      - name: Checkout Repo
        uses: actions/checkout@v4.1.6

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: "20.x"
          registry-url: "https://registry.npmjs.org"

      - name: Load package.json into the env
        id: load-package-data
        run: |
          echo 'PACKAGE_JSON<<EOF' >> $GITHUB_ENV
          cat ./package.json >> $GITHUB_ENV
          echo 'EOF' >> $GITHUB_ENV

      - name: Output project version
        id: proj-version
        run: echo "bumped-version=${{ fromJson(env.PACKAGE_JSON).version }}" >> "$GITHUB_OUTPUT"

      - name: Install dependencies
        run: npm ci

      - name: Compile project
        run: npm run build

      - uses: actions/upload-artifact@v4
        id: artifact-upload
        with:
          name: ${{ env.OUTPUT_NAME }}
          retention-days: 1
          path: ./*

  package:
    name: Package Project
    runs-on:
      - self-hosted
      - Linux

    needs:
      - compile-project

    env:
      BRANCH_NAME: ${{ github.ref_name }}
      OUTPUT_NAME: "${{ github.sha }}-packed"

    outputs:
      artifact-name: ${{ env.OUTPUT_NAME }}
      artifact-id: ${{ steps.artifact-upload.outputs.artifact-id }}
      artifact-url: ${{ steps.artifact-upload.outputs.artifact-url }}
      project-version: ${{ needs.compile-project.outputs.project-version }}

    steps:
      - name: Download artifact
        uses: actions/download-artifact@v4
        with:
          name: ${{ needs.compile-project.outputs.artifact-name }}

      - name: Upload artifact
        id: artifact-upload
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.OUTPUT_NAME }}
          path: |
            package.json
            package-lock.json
            assets/
            dist/
            ptero/

  release:
    name: Release Project
    runs-on:
      - self-hosted
      - Linux

    needs:
      - package

    env:
      BRANCH_NAME: ${{ github.ref_name }}
      OUTPUT_NAME: "${{ github.sha }}-packed"

    steps:
      - name: Download artifact
        uses: actions/download-artifact@v4
        with:
          name: ${{ env.OUTPUT_NAME }}
          path: artifacts
      
      - name: Zip artifact
        run: |
          tar -cvzf ${{ env.OUTPUT_NAME }}.tar.gz artifacts/
      
      - name: Zip ptero artifact
        run: |
          tar -cvzf pterodactyl-package.tar.gz artifacts/

      - name: Generate changelog
        id: generate-changelog
        uses: saadmk11/changelog-ci@v1.1.2
        with:
          release_version: ${{ needs.package.outputs.project-version }}
          changelog_filename: CHANGELOG.md
          config_file: ./.github/configs/changelog-ci.json
          committer_username: Changelog Doctor
          committer_email: 41898282+github-actions[bot]@users.noreply.github.com

      - name: Create release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: "v${{ needs.package.outputs.project-version }}"
          name: "Release: v${{ needs.package.outputs.project-version }}"
          fail_on_unmatched_files: true
          generate_release_notes: true
          prerelease: false
          make_latest: true
          files: |
            ${{ env.OUTPUT_NAME }}.tar.gz
            pterodactyl-package.tar.gz
